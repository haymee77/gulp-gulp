{
  "{\"sourceRoot\":\"/Users/haymee/git/gulp-gulp/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/haymee/git/gulp-gulp\",\"filename\":\"/Users/haymee/git/gulp-gulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/haymee/git/gulp-gulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/haymee/git/gulp-gulp",
      "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/haymee/git/gulp-gulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/haymee/git/gulp-gulp/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hheW1lZS9naXQvZ3VscC1ndWxwLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [],
      "mappings": ";;AAAA",
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "sourcesContent": [
        "import gulp from 'gulp';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591907967582
  },
  "{\"sourceRoot\":\"/Users/haymee/git/gulp-gulp/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/haymee/git/gulp-gulp\",\"filename\":\"/Users/haymee/git/gulp-gulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/haymee/git/gulp-gulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/haymee/git/gulp-gulp",
      "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/haymee/git/gulp-gulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/haymee/git/gulp-gulp/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = exports.build = exports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpGhPages = _interopRequireDefault(require(\"gulp-gh-pages\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulpSass.default.compiler = require('node-sass');\nconst routes = {\n  pug: {\n    watch: 'src/**/*.pug',\n    src: 'src/*.pug',\n    dest: 'build'\n  },\n  img: {\n    src: 'src/img/*',\n    dest: 'build/img'\n  },\n  style: {\n    watch: 'src/scss/*',\n    src: 'src/scss/style.scss',\n    dest: 'build/css'\n  }\n};\n\nconst clean = () => (0, _del.default)(['build']);\n\nconst view = () => _gulp.default.src(routes.pug.src).pipe((0, _gulpPug.default)()).pipe(_gulp.default.dest(routes.pug.dest));\n\nconst img = () => _gulp.default.src(routes.img.src).pipe((0, _gulpImage.default)()).pipe(_gulp.default.dest(routes.img.dest));\n\nconst sass = () => _gulp.default.src(routes.style.src).pipe((0, _gulpSass.default)().on('error', _gulpSass.default.logError)).pipe((0, _gulpAutoprefixer.default)({\n  cascade: true,\n  overrideBrowserslist: ['last 2 versions']\n})).pipe((0, _gulpCsso.default)()).pipe(_gulp.default.dest(routes.style.dest));\n\nconst webserver = () => _gulp.default.src('build').pipe((0, _gulpWebserver.default)({\n  livereload: true,\n  open: true\n}));\n\nconst watch = () => {\n  _gulp.default.watch(routes.pug.watch, view);\n\n  _gulp.default.watch(routes.img.src, img);\n\n  _gulp.default.watch(routes.style.watch, sass);\n};\n\nconst gh = () => _gulp.default.src('build/**/*').pipe((0, _gulpGhPages.default)({\n  remoteUrl: 'gulp_gulp'\n}));\n\nconst prepare = _gulp.default.series([clean, img]);\n\nconst assets = _gulp.default.series([view, sass]);\n\nconst postDev = _gulp.default.parallel([webserver, watch]);\n\nconst dev = _gulp.default.series([prepare, assets, postDev]);\n\nexports.dev = dev;\n\nconst build = _gulp.default.series([prepare, assets]);\n\nexports.build = build;\n\nconst deploy = _gulp.default.series([build, gh]);\n\nexports.deploy = deploy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImdzYXNzIiwiY29tcGlsZXIiLCJyZXF1aXJlIiwicm91dGVzIiwicHVnIiwid2F0Y2giLCJzcmMiLCJkZXN0IiwiaW1nIiwic3R5bGUiLCJjbGVhbiIsInZpZXciLCJndWxwIiwicGlwZSIsInNhc3MiLCJvbiIsImxvZ0Vycm9yIiwiY2FzY2FkZSIsIm92ZXJyaWRlQnJvd3NlcnNsaXN0Iiwid2Vic2VydmVyIiwibGl2ZXJlbG9hZCIsIm9wZW4iLCJnaCIsInJlbW90ZVVybCIsInByZXBhcmUiLCJzZXJpZXMiLCJhc3NldHMiLCJwb3N0RGV2IiwicGFyYWxsZWwiLCJkZXYiLCJidWlsZCIsImRlcGxveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUFBLGtCQUFNQyxRQUFOLEdBQWlCQyxPQUFPLENBQUMsV0FBRCxDQUF4QjtBQUVBLE1BQU1DLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxHQUFHLEVBQUU7QUFDSEMsSUFBQUEsS0FBSyxFQUFFLGNBREo7QUFFSEMsSUFBQUEsR0FBRyxFQUFFLFdBRkY7QUFHSEMsSUFBQUEsSUFBSSxFQUFFO0FBSEgsR0FEUTtBQU1iQyxFQUFBQSxHQUFHLEVBQUU7QUFDSEYsSUFBQUEsR0FBRyxFQUFFLFdBREY7QUFFSEMsSUFBQUEsSUFBSSxFQUFFO0FBRkgsR0FOUTtBQVViRSxFQUFBQSxLQUFLLEVBQUU7QUFDTEosSUFBQUEsS0FBSyxFQUFFLFlBREY7QUFFTEMsSUFBQUEsR0FBRyxFQUFFLHFCQUZBO0FBR0xDLElBQUFBLElBQUksRUFBRTtBQUhEO0FBVk0sQ0FBZjs7QUFpQkEsTUFBTUcsS0FBSyxHQUFHLE1BQU0sa0JBQUksQ0FBQyxPQUFELENBQUosQ0FBcEI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHLE1BQU1DLGNBQUtOLEdBQUwsQ0FBU0gsTUFBTSxDQUFDQyxHQUFQLENBQVdFLEdBQXBCLEVBQXlCTyxJQUF6QixDQUE4Qix1QkFBOUIsRUFBcUNBLElBQXJDLENBQTBDRCxjQUFLTCxJQUFMLENBQVVKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXRyxJQUFyQixDQUExQyxDQUFuQjs7QUFDQSxNQUFNQyxHQUFHLEdBQUcsTUFBTUksY0FBS04sR0FBTCxDQUFTSCxNQUFNLENBQUNLLEdBQVAsQ0FBV0YsR0FBcEIsRUFBeUJPLElBQXpCLENBQThCLHlCQUE5QixFQUFzQ0EsSUFBdEMsQ0FBMkNELGNBQUtMLElBQUwsQ0FBVUosTUFBTSxDQUFDSyxHQUFQLENBQVdELElBQXJCLENBQTNDLENBQWxCOztBQUNBLE1BQU1PLElBQUksR0FBRyxNQUNYRixjQUNHTixHQURILENBQ09ILE1BQU0sQ0FBQ00sS0FBUCxDQUFhSCxHQURwQixFQUVHTyxJQUZILENBRVEseUJBQVFFLEVBQVIsQ0FBVyxPQUFYLEVBQW9CZixrQkFBTWdCLFFBQTFCLENBRlIsRUFHR0gsSUFISCxDQUdRLCtCQUFjO0FBQUVJLEVBQUFBLE9BQU8sRUFBRSxJQUFYO0FBQWlCQyxFQUFBQSxvQkFBb0IsRUFBRSxDQUFDLGlCQUFEO0FBQXZDLENBQWQsQ0FIUixFQUlHTCxJQUpILENBSVEsd0JBSlIsRUFLR0EsSUFMSCxDQUtRRCxjQUFLTCxJQUFMLENBQVVKLE1BQU0sQ0FBQ00sS0FBUCxDQUFhRixJQUF2QixDQUxSLENBREY7O0FBUUEsTUFBTVksU0FBUyxHQUFHLE1BQU1QLGNBQUtOLEdBQUwsQ0FBUyxPQUFULEVBQWtCTyxJQUFsQixDQUF1Qiw0QkFBRztBQUFFTyxFQUFBQSxVQUFVLEVBQUUsSUFBZDtBQUFvQkMsRUFBQUEsSUFBSSxFQUFFO0FBQTFCLENBQUgsQ0FBdkIsQ0FBeEI7O0FBRUEsTUFBTWhCLEtBQUssR0FBRyxNQUFNO0FBQ2xCTyxnQkFBS1AsS0FBTCxDQUFXRixNQUFNLENBQUNDLEdBQVAsQ0FBV0MsS0FBdEIsRUFBNkJNLElBQTdCOztBQUNBQyxnQkFBS1AsS0FBTCxDQUFXRixNQUFNLENBQUNLLEdBQVAsQ0FBV0YsR0FBdEIsRUFBMkJFLEdBQTNCOztBQUNBSSxnQkFBS1AsS0FBTCxDQUFXRixNQUFNLENBQUNNLEtBQVAsQ0FBYUosS0FBeEIsRUFBK0JTLElBQS9CO0FBQ0QsQ0FKRDs7QUFNQSxNQUFNUSxFQUFFLEdBQUcsTUFBTVYsY0FBS04sR0FBTCxDQUFTLFlBQVQsRUFBdUJPLElBQXZCLENBQTRCLDBCQUFRO0FBQUVVLEVBQUFBLFNBQVMsRUFBRTtBQUFiLENBQVIsQ0FBNUIsQ0FBakI7O0FBRUEsTUFBTUMsT0FBTyxHQUFHWixjQUFLYSxNQUFMLENBQVksQ0FBQ2YsS0FBRCxFQUFRRixHQUFSLENBQVosQ0FBaEI7O0FBQ0EsTUFBTWtCLE1BQU0sR0FBR2QsY0FBS2EsTUFBTCxDQUFZLENBQUNkLElBQUQsRUFBT0csSUFBUCxDQUFaLENBQWY7O0FBQ0EsTUFBTWEsT0FBTyxHQUFHZixjQUFLZ0IsUUFBTCxDQUFjLENBQUNULFNBQUQsRUFBWWQsS0FBWixDQUFkLENBQWhCOztBQUVPLE1BQU13QixHQUFHLEdBQUdqQixjQUFLYSxNQUFMLENBQVksQ0FBQ0QsT0FBRCxFQUFVRSxNQUFWLEVBQWtCQyxPQUFsQixDQUFaLENBQVo7Ozs7QUFDQSxNQUFNRyxLQUFLLEdBQUdsQixjQUFLYSxNQUFMLENBQVksQ0FBQ0QsT0FBRCxFQUFVRSxNQUFWLENBQVosQ0FBZDs7OztBQUNBLE1BQU1LLE1BQU0sR0FBR25CLGNBQUthLE1BQUwsQ0FBWSxDQUFDSyxLQUFELEVBQVFSLEVBQVIsQ0FBWixDQUFmIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9oYXltZWUvZ2l0L2d1bHAtZ3VscC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcbmltcG9ydCBwdWcgZnJvbSAnZ3VscC1wdWcnO1xuaW1wb3J0IGRlbCBmcm9tICdkZWwnO1xuaW1wb3J0IHdzIGZyb20gJ2d1bHAtd2Vic2VydmVyJztcbmltcG9ydCBnaFBhZ2VzIGZyb20gJ2d1bHAtZ2gtcGFnZXMnO1xuaW1wb3J0IGdpbWcgZnJvbSAnZ3VscC1pbWFnZSc7XG5pbXBvcnQgZ3Nhc3MgZnJvbSAnZ3VscC1zYXNzJztcbmltcG9ydCBnYXV0b3ByZWZpeGVyIGZyb20gJ2d1bHAtYXV0b3ByZWZpeGVyJztcbmltcG9ydCBtaW5pZnlDc3MgZnJvbSAnZ3VscC1jc3NvJztcblxuZ3Nhc3MuY29tcGlsZXIgPSByZXF1aXJlKCdub2RlLXNhc3MnKTtcblxuY29uc3Qgcm91dGVzID0ge1xuICBwdWc6IHtcbiAgICB3YXRjaDogJ3NyYy8qKi8qLnB1ZycsXG4gICAgc3JjOiAnc3JjLyoucHVnJyxcbiAgICBkZXN0OiAnYnVpbGQnLFxuICB9LFxuICBpbWc6IHtcbiAgICBzcmM6ICdzcmMvaW1nLyonLFxuICAgIGRlc3Q6ICdidWlsZC9pbWcnLFxuICB9LFxuICBzdHlsZToge1xuICAgIHdhdGNoOiAnc3JjL3Njc3MvKicsXG4gICAgc3JjOiAnc3JjL3Njc3Mvc3R5bGUuc2NzcycsXG4gICAgZGVzdDogJ2J1aWxkL2NzcycsXG4gIH0sXG59O1xuXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbJ2J1aWxkJ10pO1xuY29uc3QgdmlldyA9ICgpID0+IGd1bHAuc3JjKHJvdXRlcy5wdWcuc3JjKS5waXBlKHB1ZygpKS5waXBlKGd1bHAuZGVzdChyb3V0ZXMucHVnLmRlc3QpKTtcbmNvbnN0IGltZyA9ICgpID0+IGd1bHAuc3JjKHJvdXRlcy5pbWcuc3JjKS5waXBlKGdpbWcoKSkucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSk7XG5jb25zdCBzYXNzID0gKCkgPT5cbiAgZ3VscFxuICAgIC5zcmMocm91dGVzLnN0eWxlLnNyYylcbiAgICAucGlwZShnc2FzcygpLm9uKCdlcnJvcicsIGdzYXNzLmxvZ0Vycm9yKSlcbiAgICAucGlwZShnYXV0b3ByZWZpeGVyKHsgY2FzY2FkZTogdHJ1ZSwgb3ZlcnJpZGVCcm93c2Vyc2xpc3Q6IFsnbGFzdCAyIHZlcnNpb25zJ10gfSkpXG4gICAgLnBpcGUobWluaWZ5Q3NzKCkpXG4gICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5zdHlsZS5kZXN0KSk7XG5cbmNvbnN0IHdlYnNlcnZlciA9ICgpID0+IGd1bHAuc3JjKCdidWlsZCcpLnBpcGUod3MoeyBsaXZlcmVsb2FkOiB0cnVlLCBvcGVuOiB0cnVlIH0pKTtcblxuY29uc3Qgd2F0Y2ggPSAoKSA9PiB7XG4gIGd1bHAud2F0Y2gocm91dGVzLnB1Zy53YXRjaCwgdmlldyk7XG4gIGd1bHAud2F0Y2gocm91dGVzLmltZy5zcmMsIGltZyk7XG4gIGd1bHAud2F0Y2gocm91dGVzLnN0eWxlLndhdGNoLCBzYXNzKTtcbn07XG5cbmNvbnN0IGdoID0gKCkgPT4gZ3VscC5zcmMoJ2J1aWxkLyoqLyonKS5waXBlKGdoUGFnZXMoeyByZW1vdGVVcmw6ICdndWxwX2d1bHAnIH0pKTtcblxuY29uc3QgcHJlcGFyZSA9IGd1bHAuc2VyaWVzKFtjbGVhbiwgaW1nXSk7XG5jb25zdCBhc3NldHMgPSBndWxwLnNlcmllcyhbdmlldywgc2Fzc10pO1xuY29uc3QgcG9zdERldiA9IGd1bHAucGFyYWxsZWwoW3dlYnNlcnZlciwgd2F0Y2hdKTtcblxuZXhwb3J0IGNvbnN0IGRldiA9IGd1bHAuc2VyaWVzKFtwcmVwYXJlLCBhc3NldHMsIHBvc3REZXZdKTtcbmV4cG9ydCBjb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKFtwcmVwYXJlLCBhc3NldHNdKTtcbmV4cG9ydCBjb25zdCBkZXBsb3kgPSBndWxwLnNlcmllcyhbYnVpbGQsIGdoXSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gsass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "style",
        "clean",
        "view",
        "gulp",
        "pipe",
        "sass",
        "on",
        "logError",
        "cascade",
        "overrideBrowserslist",
        "webserver",
        "livereload",
        "open",
        "gh",
        "remoteUrl",
        "prepare",
        "series",
        "assets",
        "postDev",
        "parallel",
        "dev",
        "build",
        "deploy"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,kBAAMC,QAAN,GAAiBC,OAAO,CAAC,WAAD,CAAxB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,cADJ;AAEHC,IAAAA,GAAG,EAAE,WAFF;AAGHC,IAAAA,IAAI,EAAE;AAHH,GADQ;AAMbC,EAAAA,GAAG,EAAE;AACHF,IAAAA,GAAG,EAAE,WADF;AAEHC,IAAAA,IAAI,EAAE;AAFH,GANQ;AAUbE,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAE,YADF;AAELC,IAAAA,GAAG,EAAE,qBAFA;AAGLC,IAAAA,IAAI,EAAE;AAHD;AAVM,CAAf;;AAiBA,MAAMG,KAAK,GAAG,MAAM,kBAAI,CAAC,OAAD,CAAJ,CAApB;;AACA,MAAMC,IAAI,GAAG,MAAMC,cAAKN,GAAL,CAASH,MAAM,CAACC,GAAP,CAAWE,GAApB,EAAyBO,IAAzB,CAA8B,uBAA9B,EAAqCA,IAArC,CAA0CD,cAAKL,IAAL,CAAUJ,MAAM,CAACC,GAAP,CAAWG,IAArB,CAA1C,CAAnB;;AACA,MAAMC,GAAG,GAAG,MAAMI,cAAKN,GAAL,CAASH,MAAM,CAACK,GAAP,CAAWF,GAApB,EAAyBO,IAAzB,CAA8B,yBAA9B,EAAsCA,IAAtC,CAA2CD,cAAKL,IAAL,CAAUJ,MAAM,CAACK,GAAP,CAAWD,IAArB,CAA3C,CAAlB;;AACA,MAAMO,IAAI,GAAG,MACXF,cACGN,GADH,CACOH,MAAM,CAACM,KAAP,CAAaH,GADpB,EAEGO,IAFH,CAEQ,yBAAQE,EAAR,CAAW,OAAX,EAAoBf,kBAAMgB,QAA1B,CAFR,EAGGH,IAHH,CAGQ,+BAAc;AAAEI,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,oBAAoB,EAAE,CAAC,iBAAD;AAAvC,CAAd,CAHR,EAIGL,IAJH,CAIQ,wBAJR,EAKGA,IALH,CAKQD,cAAKL,IAAL,CAAUJ,MAAM,CAACM,KAAP,CAAaF,IAAvB,CALR,CADF;;AAQA,MAAMY,SAAS,GAAG,MAAMP,cAAKN,GAAL,CAAS,OAAT,EAAkBO,IAAlB,CAAuB,4BAAG;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,IAAI,EAAE;AAA1B,CAAH,CAAvB,CAAxB;;AAEA,MAAMhB,KAAK,GAAG,MAAM;AAClBO,gBAAKP,KAAL,CAAWF,MAAM,CAACC,GAAP,CAAWC,KAAtB,EAA6BM,IAA7B;;AACAC,gBAAKP,KAAL,CAAWF,MAAM,CAACK,GAAP,CAAWF,GAAtB,EAA2BE,GAA3B;;AACAI,gBAAKP,KAAL,CAAWF,MAAM,CAACM,KAAP,CAAaJ,KAAxB,EAA+BS,IAA/B;AACD,CAJD;;AAMA,MAAMQ,EAAE,GAAG,MAAMV,cAAKN,GAAL,CAAS,YAAT,EAAuBO,IAAvB,CAA4B,0BAAQ;AAAEU,EAAAA,SAAS,EAAE;AAAb,CAAR,CAA5B,CAAjB;;AAEA,MAAMC,OAAO,GAAGZ,cAAKa,MAAL,CAAY,CAACf,KAAD,EAAQF,GAAR,CAAZ,CAAhB;;AACA,MAAMkB,MAAM,GAAGd,cAAKa,MAAL,CAAY,CAACd,IAAD,EAAOG,IAAP,CAAZ,CAAf;;AACA,MAAMa,OAAO,GAAGf,cAAKgB,QAAL,CAAc,CAACT,SAAD,EAAYd,KAAZ,CAAd,CAAhB;;AAEO,MAAMwB,GAAG,GAAGjB,cAAKa,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,EAAkBC,OAAlB,CAAZ,CAAZ;;;;AACA,MAAMG,KAAK,GAAGlB,cAAKa,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,CAAZ,CAAd;;;;AACA,MAAMK,MAAM,GAAGnB,cAAKa,MAAL,CAAY,CAACK,KAAD,EAAQR,EAAR,CAAZ,CAAf",
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "sourcesContent": [
        "import gulp from 'gulp';\nimport pug from 'gulp-pug';\nimport del from 'del';\nimport ws from 'gulp-webserver';\nimport ghPages from 'gulp-gh-pages';\nimport gimg from 'gulp-image';\nimport gsass from 'gulp-sass';\nimport gautoprefixer from 'gulp-autoprefixer';\nimport minifyCss from 'gulp-csso';\n\ngsass.compiler = require('node-sass');\n\nconst routes = {\n  pug: {\n    watch: 'src/**/*.pug',\n    src: 'src/*.pug',\n    dest: 'build',\n  },\n  img: {\n    src: 'src/img/*',\n    dest: 'build/img',\n  },\n  style: {\n    watch: 'src/scss/*',\n    src: 'src/scss/style.scss',\n    dest: 'build/css',\n  },\n};\n\nconst clean = () => del(['build']);\nconst view = () => gulp.src(routes.pug.src).pipe(pug()).pipe(gulp.dest(routes.pug.dest));\nconst img = () => gulp.src(routes.img.src).pipe(gimg()).pipe(gulp.dest(routes.img.dest));\nconst sass = () =>\n  gulp\n    .src(routes.style.src)\n    .pipe(gsass().on('error', gsass.logError))\n    .pipe(gautoprefixer({ cascade: true, overrideBrowserslist: ['last 2 versions'] }))\n    .pipe(minifyCss())\n    .pipe(gulp.dest(routes.style.dest));\n\nconst webserver = () => gulp.src('build').pipe(ws({ livereload: true, open: true }));\n\nconst watch = () => {\n  gulp.watch(routes.pug.watch, view);\n  gulp.watch(routes.img.src, img);\n  gulp.watch(routes.style.watch, sass);\n};\n\nconst gh = () => gulp.src('build/**/*').pipe(ghPages({ remoteUrl: 'gulp_gulp' }));\n\nconst prepare = gulp.series([clean, img]);\nconst assets = gulp.series([view, sass]);\nconst postDev = gulp.parallel([webserver, watch]);\n\nexport const dev = gulp.series([prepare, assets, postDev]);\nexport const build = gulp.series([prepare, assets]);\nexport const deploy = gulp.series([build, gh]);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591974775331
  }
}