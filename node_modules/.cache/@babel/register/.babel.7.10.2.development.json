{
  "{\"sourceRoot\":\"/Users/haymee/git/gulp-gulp/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/haymee/git/gulp-gulp\",\"filename\":\"/Users/haymee/git/gulp-gulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/haymee/git/gulp-gulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/haymee/git/gulp-gulp",
      "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/haymee/git/gulp-gulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/haymee/git/gulp-gulp/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hheW1lZS9naXQvZ3VscC1ndWxwLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [],
      "mappings": ";;AAAA",
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "sourcesContent": [
        "import gulp from 'gulp';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591907967582
  },
  "{\"sourceRoot\":\"/Users/haymee/git/gulp-gulp/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/haymee/git/gulp-gulp\",\"filename\":\"/Users/haymee/git/gulp-gulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/haymee/git/gulp-gulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/haymee/git/gulp-gulp",
      "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/haymee/git/gulp-gulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/haymee/git/gulp-gulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/haymee/git/gulp-gulp/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = exports.build = exports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpGhPages = _interopRequireDefault(require(\"gulp-gh-pages\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst routes = {\n  pug: {\n    watch: 'src/**/*.pug',\n    src: 'src/*.pug',\n    dest: 'build'\n  },\n  img: {\n    src: 'src/img/**/*.*',\n    dest: 'build/img'\n  }\n};\n\nconst clean = () => (0, _del.default)(['build']);\n\nconst view = () => _gulp.default.src(routes.pug.src).pipe((0, _gulpPug.default)()).pipe(_gulp.default.dest(routes.pug.dest));\n\nconst img = () => _gulp.default.src(routes.img.src).pipe((0, _gulpImage.default)()).pipe(_gulp.default.dest(routes.img.dest));\n\nconst webserver = () => _gulp.default.src('build').pipe((0, _gulpWebserver.default)({\n  livereload: true,\n  open: true\n}));\n\nconst watch = () => {\n  _gulp.default.watch(routes.pug.watch, view);\n};\n\nconst gh = () => _gulp.default.src('/build/**/*').pipe((0, _gulpGhPages.default)());\n\nconst prepare = _gulp.default.series([clean]);\n\nconst assets = _gulp.default.series([view, img]);\n\nconst postDev = _gulp.default.parallel([webserver, watch]);\n\nconst dev = _gulp.default.series([prepare, assets, postDev]);\n\nexports.dev = dev;\n\nconst build = _gulp.default.series([prepare, assets]);\n\nexports.build = build;\n\nconst deploy = _gulp.default.series([build, gh]);\n\nexports.deploy = deploy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJvdXRlcyIsInB1ZyIsIndhdGNoIiwic3JjIiwiZGVzdCIsImltZyIsImNsZWFuIiwidmlldyIsImd1bHAiLCJwaXBlIiwid2Vic2VydmVyIiwibGl2ZXJlbG9hZCIsIm9wZW4iLCJnaCIsInByZXBhcmUiLCJzZXJpZXMiLCJhc3NldHMiLCJwb3N0RGV2IiwicGFyYWxsZWwiLCJkZXYiLCJidWlsZCIsImRlcGxveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLEdBQUcsRUFBRTtBQUNIQyxJQUFBQSxLQUFLLEVBQUUsY0FESjtBQUVIQyxJQUFBQSxHQUFHLEVBQUUsV0FGRjtBQUdIQyxJQUFBQSxJQUFJLEVBQUU7QUFISCxHQURRO0FBTWJDLEVBQUFBLEdBQUcsRUFBRTtBQUNIRixJQUFBQSxHQUFHLEVBQUUsZ0JBREY7QUFFSEMsSUFBQUEsSUFBSSxFQUFFO0FBRkg7QUFOUSxDQUFmOztBQVlBLE1BQU1FLEtBQUssR0FBRyxNQUFNLGtCQUFJLENBQUMsT0FBRCxDQUFKLENBQXBCOztBQUNBLE1BQU1DLElBQUksR0FBRyxNQUFNQyxjQUFLTCxHQUFMLENBQVNILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXRSxHQUFwQixFQUF5Qk0sSUFBekIsQ0FBOEIsdUJBQTlCLEVBQXFDQSxJQUFyQyxDQUEwQ0QsY0FBS0osSUFBTCxDQUFVSixNQUFNLENBQUNDLEdBQVAsQ0FBV0csSUFBckIsQ0FBMUMsQ0FBbkI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHLE1BQU1HLGNBQUtMLEdBQUwsQ0FBU0gsTUFBTSxDQUFDSyxHQUFQLENBQVdGLEdBQXBCLEVBQXlCTSxJQUF6QixDQUE4Qix5QkFBOUIsRUFBc0NBLElBQXRDLENBQTJDRCxjQUFLSixJQUFMLENBQVVKLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXRCxJQUFyQixDQUEzQyxDQUFsQjs7QUFFQSxNQUFNTSxTQUFTLEdBQUcsTUFBTUYsY0FBS0wsR0FBTCxDQUFTLE9BQVQsRUFBa0JNLElBQWxCLENBQXVCLDRCQUFHO0FBQUVFLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxJQUFJLEVBQUU7QUFBMUIsQ0FBSCxDQUF2QixDQUF4Qjs7QUFDQSxNQUFNVixLQUFLLEdBQUcsTUFBTTtBQUNsQk0sZ0JBQUtOLEtBQUwsQ0FBV0YsTUFBTSxDQUFDQyxHQUFQLENBQVdDLEtBQXRCLEVBQTZCSyxJQUE3QjtBQUNELENBRkQ7O0FBSUEsTUFBTU0sRUFBRSxHQUFHLE1BQU1MLGNBQUtMLEdBQUwsQ0FBUyxhQUFULEVBQXdCTSxJQUF4QixDQUE2QiwyQkFBN0IsQ0FBakI7O0FBRUEsTUFBTUssT0FBTyxHQUFHTixjQUFLTyxNQUFMLENBQVksQ0FBQ1QsS0FBRCxDQUFaLENBQWhCOztBQUNBLE1BQU1VLE1BQU0sR0FBR1IsY0FBS08sTUFBTCxDQUFZLENBQUNSLElBQUQsRUFBT0YsR0FBUCxDQUFaLENBQWY7O0FBQ0EsTUFBTVksT0FBTyxHQUFHVCxjQUFLVSxRQUFMLENBQWMsQ0FBQ1IsU0FBRCxFQUFZUixLQUFaLENBQWQsQ0FBaEI7O0FBRU8sTUFBTWlCLEdBQUcsR0FBR1gsY0FBS08sTUFBTCxDQUFZLENBQUNELE9BQUQsRUFBVUUsTUFBVixFQUFrQkMsT0FBbEIsQ0FBWixDQUFaOzs7O0FBQ0EsTUFBTUcsS0FBSyxHQUFHWixjQUFLTyxNQUFMLENBQVksQ0FBQ0QsT0FBRCxFQUFVRSxNQUFWLENBQVosQ0FBZDs7OztBQUNBLE1BQU1LLE1BQU0sR0FBR2IsY0FBS08sTUFBTCxDQUFZLENBQUNLLEtBQUQsRUFBUVAsRUFBUixDQUFaLENBQWYiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hheW1lZS9naXQvZ3VscC1ndWxwLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1ZyBmcm9tICdndWxwLXB1Zyc7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5pbXBvcnQgd3MgZnJvbSAnZ3VscC13ZWJzZXJ2ZXInO1xuaW1wb3J0IGdoUGFnZXMgZnJvbSAnZ3VscC1naC1wYWdlcyc7XG5pbXBvcnQgZ2ltZyBmcm9tICdndWxwLWltYWdlJztcblxuY29uc3Qgcm91dGVzID0ge1xuICBwdWc6IHtcbiAgICB3YXRjaDogJ3NyYy8qKi8qLnB1ZycsXG4gICAgc3JjOiAnc3JjLyoucHVnJyxcbiAgICBkZXN0OiAnYnVpbGQnLFxuICB9LFxuICBpbWc6IHtcbiAgICBzcmM6ICdzcmMvaW1nLyoqLyouKicsXG4gICAgZGVzdDogJ2J1aWxkL2ltZycsXG4gIH0sXG59O1xuXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbJ2J1aWxkJ10pO1xuY29uc3QgdmlldyA9ICgpID0+IGd1bHAuc3JjKHJvdXRlcy5wdWcuc3JjKS5waXBlKHB1ZygpKS5waXBlKGd1bHAuZGVzdChyb3V0ZXMucHVnLmRlc3QpKTtcbmNvbnN0IGltZyA9ICgpID0+IGd1bHAuc3JjKHJvdXRlcy5pbWcuc3JjKS5waXBlKGdpbWcoKSkucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSk7XG5cbmNvbnN0IHdlYnNlcnZlciA9ICgpID0+IGd1bHAuc3JjKCdidWlsZCcpLnBpcGUod3MoeyBsaXZlcmVsb2FkOiB0cnVlLCBvcGVuOiB0cnVlIH0pKTtcbmNvbnN0IHdhdGNoID0gKCkgPT4ge1xuICBndWxwLndhdGNoKHJvdXRlcy5wdWcud2F0Y2gsIHZpZXcpO1xufTtcblxuY29uc3QgZ2ggPSAoKSA9PiBndWxwLnNyYygnL2J1aWxkLyoqLyonKS5waXBlKGdoUGFnZXMoKSk7XG5cbmNvbnN0IHByZXBhcmUgPSBndWxwLnNlcmllcyhbY2xlYW5dKTtcbmNvbnN0IGFzc2V0cyA9IGd1bHAuc2VyaWVzKFt2aWV3LCBpbWddKTtcbmNvbnN0IHBvc3REZXYgPSBndWxwLnBhcmFsbGVsKFt3ZWJzZXJ2ZXIsIHdhdGNoXSk7XG5cbmV4cG9ydCBjb25zdCBkZXYgPSBndWxwLnNlcmllcyhbcHJlcGFyZSwgYXNzZXRzLCBwb3N0RGV2XSk7XG5leHBvcnQgY29uc3QgYnVpbGQgPSBndWxwLnNlcmllcyhbcHJlcGFyZSwgYXNzZXRzXSk7XG5leHBvcnQgY29uc3QgZGVwbG95ID0gZ3VscC5zZXJpZXMoW2J1aWxkLCBnaF0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "clean",
        "view",
        "gulp",
        "pipe",
        "webserver",
        "livereload",
        "open",
        "gh",
        "prepare",
        "series",
        "assets",
        "postDev",
        "parallel",
        "dev",
        "build",
        "deploy"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,cADJ;AAEHC,IAAAA,GAAG,EAAE,WAFF;AAGHC,IAAAA,IAAI,EAAE;AAHH,GADQ;AAMbC,EAAAA,GAAG,EAAE;AACHF,IAAAA,GAAG,EAAE,gBADF;AAEHC,IAAAA,IAAI,EAAE;AAFH;AANQ,CAAf;;AAYA,MAAME,KAAK,GAAG,MAAM,kBAAI,CAAC,OAAD,CAAJ,CAApB;;AACA,MAAMC,IAAI,GAAG,MAAMC,cAAKL,GAAL,CAASH,MAAM,CAACC,GAAP,CAAWE,GAApB,EAAyBM,IAAzB,CAA8B,uBAA9B,EAAqCA,IAArC,CAA0CD,cAAKJ,IAAL,CAAUJ,MAAM,CAACC,GAAP,CAAWG,IAArB,CAA1C,CAAnB;;AACA,MAAMC,GAAG,GAAG,MAAMG,cAAKL,GAAL,CAASH,MAAM,CAACK,GAAP,CAAWF,GAApB,EAAyBM,IAAzB,CAA8B,yBAA9B,EAAsCA,IAAtC,CAA2CD,cAAKJ,IAAL,CAAUJ,MAAM,CAACK,GAAP,CAAWD,IAArB,CAA3C,CAAlB;;AAEA,MAAMM,SAAS,GAAG,MAAMF,cAAKL,GAAL,CAAS,OAAT,EAAkBM,IAAlB,CAAuB,4BAAG;AAAEE,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,IAAI,EAAE;AAA1B,CAAH,CAAvB,CAAxB;;AACA,MAAMV,KAAK,GAAG,MAAM;AAClBM,gBAAKN,KAAL,CAAWF,MAAM,CAACC,GAAP,CAAWC,KAAtB,EAA6BK,IAA7B;AACD,CAFD;;AAIA,MAAMM,EAAE,GAAG,MAAML,cAAKL,GAAL,CAAS,aAAT,EAAwBM,IAAxB,CAA6B,2BAA7B,CAAjB;;AAEA,MAAMK,OAAO,GAAGN,cAAKO,MAAL,CAAY,CAACT,KAAD,CAAZ,CAAhB;;AACA,MAAMU,MAAM,GAAGR,cAAKO,MAAL,CAAY,CAACR,IAAD,EAAOF,GAAP,CAAZ,CAAf;;AACA,MAAMY,OAAO,GAAGT,cAAKU,QAAL,CAAc,CAACR,SAAD,EAAYR,KAAZ,CAAd,CAAhB;;AAEO,MAAMiB,GAAG,GAAGX,cAAKO,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,EAAkBC,OAAlB,CAAZ,CAAZ;;;;AACA,MAAMG,KAAK,GAAGZ,cAAKO,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,CAAZ,CAAd;;;;AACA,MAAMK,MAAM,GAAGb,cAAKO,MAAL,CAAY,CAACK,KAAD,EAAQP,EAAR,CAAZ,CAAf",
      "sourceRoot": "/Users/haymee/git/gulp-gulp/",
      "sourcesContent": [
        "import gulp from 'gulp';\nimport pug from 'gulp-pug';\nimport del from 'del';\nimport ws from 'gulp-webserver';\nimport ghPages from 'gulp-gh-pages';\nimport gimg from 'gulp-image';\n\nconst routes = {\n  pug: {\n    watch: 'src/**/*.pug',\n    src: 'src/*.pug',\n    dest: 'build',\n  },\n  img: {\n    src: 'src/img/**/*.*',\n    dest: 'build/img',\n  },\n};\n\nconst clean = () => del(['build']);\nconst view = () => gulp.src(routes.pug.src).pipe(pug()).pipe(gulp.dest(routes.pug.dest));\nconst img = () => gulp.src(routes.img.src).pipe(gimg()).pipe(gulp.dest(routes.img.dest));\n\nconst webserver = () => gulp.src('build').pipe(ws({ livereload: true, open: true }));\nconst watch = () => {\n  gulp.watch(routes.pug.watch, view);\n};\n\nconst gh = () => gulp.src('/build/**/*').pipe(ghPages());\n\nconst prepare = gulp.series([clean]);\nconst assets = gulp.series([view, img]);\nconst postDev = gulp.parallel([webserver, watch]);\n\nexport const dev = gulp.series([prepare, assets, postDev]);\nexport const build = gulp.series([prepare, assets]);\nexport const deploy = gulp.series([build, gh]);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591970135864
  }
}